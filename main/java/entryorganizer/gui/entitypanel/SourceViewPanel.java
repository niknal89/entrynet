/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package entryorganizer.gui.entitypanel;

import com.jidesoft.swing.StyledLabel;
import entryorganizer.Commander;
import entryorganizer.entities.wrappers.Source;
import entryorganizer.gui.Resources;
import java.awt.event.MouseListener;
import javax.swing.BoxLayout;
import javax.swing.JPopupMenu;
import javax.swing.TransferHandler;

/**
 *
 * @author teopetuk89
 */
public class SourceViewPanel extends WrapperPanel <Source> {

    public interface SourceManager {
        public void deleteSource(Source s);
        public void editSource(Source s);
    }
    
    public interface SourceContainer {
        
        public void removeSource(Source s);
        
        public WrapperPanel getParentPanel();
        
    }
    
    private Source source;
    private JPopupMenu popup = new JPopupMenu();
    private MouseListener listener;
    private SourceManager sourceManager;
    private SourceContainer container;
    private Resources resources;
    private Commander commander;
    private StyledLabel labSource;

    public SourceViewPanel() {}
    
    /**
     * Creates new form SourceViewPanel
     */
    public SourceViewPanel(Source source, MouseListener listener, 
            Commander commander, SourceContainer sc) {
        init(source, listener, commander);
        this.container = sc;
        butDelete.setIcon(resources.getImage(Resources.REMOVE));
    }
    
    public SourceViewPanel(Source source, MouseListener listener, 
            Commander commander, SourceManager sm) {        
        init(source, listener, commander);
        sourceManager = sm;
        butDelete.setIcon(resources.getImage(Resources.DELETE));
    }
    
    public SourceViewPanel(Source source, MouseListener listener, 
            Commander commander) {
        init(source, listener, commander);
        this.remove(butDelete);
        validate();
    }
    
    public void init (Source source, MouseListener listener, 
            Commander commander, TransferHandler transferHandler, SourceContainer sc) {
        init(source, listener, commander);
        this.container = sc;
        butDelete.setIcon(resources.getImage(Resources.UNLINK));
        this.setTransferHandler(transferHandler);
    }
    
    private void init(Source source, MouseListener listener, Commander commander) {
        this.source = source;           
        this.listener = listener;
        this.resources = commander.getResources();
        this.commander = commander;
        initComponents();
        
        labSource = new StyledLabel();
        labSource.setLineWrap(true);
        labSource.addMouseListener(listener);
        butSource.setIcon(resources.getImage(Resources.SOURCE));
        panLabel.setLayout(new BoxLayout(panLabel, BoxLayout.PAGE_AXIS));    
        panLabel.add(labSource);
        reload();        
    }
    
    public void reload() {
        String text = "";
        if (source != null) {
            text = source.getShortDescription();
        }
        labSource.setText(text);/*
        Dimension d = this.getPreferredSize();
        d.setSize(d.getWidth(), labSource.getPreferredSize().height);
        this.setPreferredSize(d); */
        labSource.revalidate();
        validate();           
    }

    public Source getSource() {
        return source;
    }
    
    public void setSource(Source s) {
        this.source = s;
        reload();
    }

    @Override
    public String getContent() {
        if (source != null) {
            return source.getShortDescription();
        } else {
            return null;
        }
    }

    @Override
    public void select() {
        this.setBackground(resources.getSelectedColor());
        panLabel.setBackground(resources.getSelectedColor());
    }

    @Override
    public void deselect() {
        this.setBackground(resources.getDefaultColor());
        panLabel.setBackground(resources.getDefaultColor());
    }

    @Override
    public Source getWrapper() {
        return source;
    }  
    
    public void edit() {}
    
    public WrapperPanel getParentPanel() {
        return container.getParentPanel();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        butSource = new javax.swing.JButton();
        butDelete = new javax.swing.JButton();
        panLabel = new javax.swing.JPanel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        butSource.setText("");
        butSource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSourceActionPerformed(evt);
            }
        });

        butDelete.setText("");
        butDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butDeleteActionPerformed(evt);
            }
        });

        panLabel.setPreferredSize(new java.awt.Dimension(223, 14));

        javax.swing.GroupLayout panLabelLayout = new javax.swing.GroupLayout(panLabel);
        panLabel.setLayout(panLabelLayout);
        panLabelLayout.setHorizontalGroup(
            panLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 231, Short.MAX_VALUE)
        );
        panLabelLayout.setVerticalGroup(
            panLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(butSource, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(butDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(butSource, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(butDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void butSourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSourceActionPerformed
        if (this.sourceManager != null)
            this.sourceManager.editSource(source);
    }//GEN-LAST:event_butSourceActionPerformed

    private void butDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butDeleteActionPerformed
       if (sourceManager != null && source != null) {
           source.delete();
           sourceManager.deleteSource(source);
           source = null;
       } else if (container != null && source != null) {
           container.removeSource(source);
       }
    }//GEN-LAST:event_butDeleteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butDelete;
    private javax.swing.JButton butSource;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JPanel panLabel;
    // End of variables declaration//GEN-END:variables
}
