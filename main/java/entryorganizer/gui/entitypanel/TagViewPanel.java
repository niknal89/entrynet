/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package entryorganizer.gui.entitypanel;

import entryorganizer.Commander;
import entryorganizer.entities.exception.EntityException;
import entryorganizer.entities.wrappers.Tag;
import entryorganizer.gui.Messenger;
import entryorganizer.gui.Resources;
import entryorganizer.gui.browser.BrowserManager;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JPanel;

/**
 *
 * @author teopetuk89
 */
public class TagViewPanel extends WrapperPanel {
   
    public interface TagViewContainer {
                
        public void tagRemoved(Tag t);
        
        public void tagDeleted(Tag t);
                
        public void editTag(Tag t);
        
        public boolean canDelete();
        
        public Messenger getMessenger();
        
        public WrapperPanel getParentPanel();
        
    }
    
    private Tag tag;
    private TagViewContainer container;
    private Commander commander;
    private Resources resources;
    
    private boolean show;
    
    public static final String DELETE = "delete";
    public static final String REMOVE = "remove";
    
    /**
     * Creates new form TagViewPanel
     */
    
    public TagViewPanel() {
        initComponents();
    }
    
    public void initialize(Tag tag, Commander comm, BrowserManager manager,
            TagViewContainer tagContainer) {
        this.container = tagContainer;    
        this.tag = tag;
        this.commander = comm;
        this.resources = comm.getResources();        
        this.butTag.setIcon(resources.getImage(Resources.TAG));
        this.butRemove.setIcon(resources.getImage(Resources.UNLINK));
        reload();
    } 

    //reloading interface
    
    public void reload() {
        if (tag != null) {
            labName.setText(tag.getName());
        }
        revalidate();
    }
    
    // commands to the interface
    
    @Override
    public void select() {
        this.setBackground(resources.getSelectedColor());
        labName.setBackground(resources.getSelectedColor());       
    }

    @Override
    public void deselect() {
        this.setBackground(resources.getDefaultColor());
        labName.setBackground(resources.getDefaultColor());
    }
    
    // getters and setters
    
    @Override
    public Tag getWrapper() {
        return tag;
    }
    
    public void setTag(Tag tag) {
        this.tag = tag;
        labName.setText(tag.getName());
    }

     @Override
    public String getContent() {
        if (tag != null) {
            return tag.getName();
        } else {
            return null;
        }
    }

    private class DeleteListener implements ActionListener {

        public void actionPerformed(ActionEvent e) {
            if (tag != null) {
                tag.delete();
            }
            container.tagDeleted(tag);
            tag = null;
        }
        
    }
    
    public void edit() {
        container.editTag(tag);
    }
    
    public WrapperPanel getParentPanel() {
        if (container == null) {
            return null;
        } else {
            return container.getParentPanel();
        }
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        butTag = new javax.swing.JButton();
        butRemove = new javax.swing.JButton();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 32767));
        labName = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.X_AXIS));

        butTag.setText(null);
        butTag.setMaximumSize(new java.awt.Dimension(16, 16));
        butTag.setMinimumSize(new java.awt.Dimension(16, 16));
        butTag.setPreferredSize(new java.awt.Dimension(16, 16));
        butTag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butTagActionPerformed(evt);
            }
        });
        add(butTag);

        butRemove.setMaximumSize(new java.awt.Dimension(16, 16));
        butRemove.setMinimumSize(new java.awt.Dimension(16, 16));
        butRemove.setPreferredSize(new java.awt.Dimension(16, 16));
        butRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butRemoveActionPerformed(evt);
            }
        });
        add(butRemove);
        add(filler2);

        labName.setText("");
        add(labName);
        add(filler1);
    }// </editor-fold>//GEN-END:initComponents

    private void butTagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butTagActionPerformed
        container.editTag(tag);
    }//GEN-LAST:event_butTagActionPerformed

    private void butRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butRemoveActionPerformed
        container.tagRemoved(tag);
    }//GEN-LAST:event_butRemoveActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butRemove;
    private javax.swing.JButton butTag;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JLabel labName;
    // End of variables declaration//GEN-END:variables

}
