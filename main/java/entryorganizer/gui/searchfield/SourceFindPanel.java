/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SourceFindPanel.java
 *
 * Created on Feb 25, 2013, 3:08:54 PM
 */

package entryorganizer.gui.searchfield;

import entryorganizer.Commander;
import entryorganizer.entities.Entity;
import entryorganizer.entities.EntityType;
import entryorganizer.entities.wrappers.Source;
import entryorganizer.entities.wrappers.Wrapper;
import entryorganizer.gui.Resources;
import entryorganizer.gui.searchfield.SearchEntityField.SearcherContainer;

/**
 *
 * @author teopetuk89
 */
public class SourceFindPanel extends javax.swing.JPanel
    implements SearcherContainer {

    private SearchEntityField searcher;
    private Commander commander;
    private SourceFindContainer sfc;

    public interface SourceFindContainer {

        public void sourceFound(Source source);

    }

    /** Creates new form SourceFindPanel */
    public SourceFindPanel(Commander commander, SourceFindContainer sfc) {
        this.commander = commander;
        this.sfc = sfc;
        initComponents();
        labSource.setIcon(commander.getResources().getImage(Resources.SOURCE));
        this.searcher = new SearchEntityField(commander, this, fieldSearch);
        EntityType typeSource = commander.getEntityType(EntityType.SOURCE);
        searcher.setSearchRequirements(typeSource, "title");        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fieldSearch = new javax.swing.JTextField();
        labSource = new javax.swing.JLabel();

        fieldSearch.setText("");
        fieldSearch.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                fieldSearchCaretUpdate(evt);
            }
        });
        fieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fieldSearchKeyTyped(evt);
            }
        });

        labSource.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(labSource, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(fieldSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(labSource, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(fieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void fieldSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldSearchKeyTyped
        
}//GEN-LAST:event_fieldSearchKeyTyped

    private void fieldSearchCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_fieldSearchCaretUpdate
        
    }//GEN-LAST:event_fieldSearchCaretUpdate

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fieldSearch;
    private javax.swing.JLabel labSource;
    // End of variables declaration//GEN-END:variables

    @Override
    public void selected(Wrapper e) {
        if (e instanceof Source)
            sfc.sourceFound((Source) e);
    }

    public void clearInput() {
        fieldSearch.removeCaretListener(searcher);
        fieldSearch.setText("");
        fieldSearch.addCaretListener(searcher);
    }

}
